% analytical beamforming cost function
% based on point sources
% cost are weighted based on the desired emission characteristic
% CK 18-02-13
%
% f : frequency / Hz
% Lx: distance between the two rear speakers / m
% Ly: distance between front speaker & line between rear speakers / m
% u1: surface velocity for front speaker / (m/s)
% phi1: phase for front speaker / radiant
% .
% .
% .
% r: radius at which directivity is calculated
% ------------------------------------------------------------------------
function [cost]= circularcost3(f,Lx,Ly,u1,phi1,u2,phi2,u3,phi3,r)

%%
% positions of the speakers are determined by tricenter function
[s1x,s1y,s2x,s2y,s3x,s3y]=tricenter(Lx,Ly);

c=343;
rho0=1.21;
t=0;

omega=2*pi*f;
k=omega/c;

a=0.15;                         % radius of the point source / m
thetaa=tan(k/a);

angles=[-pi:pi/360:pi];         % measurement points along the radius
coorx=cos(angles).*r;
coory=sin(angles).*r;


% shifting values according to the position of the individual sources
% this leads to calculating the pressure at the same points in the room
% for each of the three point sources, so that they can be added together.
yshift1=coory-s1y;
xshift1=coorx-s1x;

yshift2=coory-s2y;
xshift2=coorx-s2x;

yshift3=coory-s3y;
xshift3=coorx-s3x;

% calculating the pressure, caused by each source, at every point of the grid
p1=rho0.*c.*u1.*(a./sqrt((xshift1.^2)+(yshift1.^2))).*cos(thetaa).*exp(i.*(omega.*t-k.*(sqrt((xshift1.^2)+(yshift1.^2))-a)+thetaa+phi1));
p2=rho0.*c.*u2.*(a./sqrt((xshift2.^2)+(yshift2.^2))).*cos(thetaa).*exp(i.*(omega.*t-k.*(sqrt((xshift2.^2)+(yshift2.^2))-a)+thetaa+phi2));
p3=rho0.*c.*u3.*(a./sqrt((xshift3.^2)+(yshift3.^2))).*cos(thetaa).*exp(i.*(omega.*t-k.*(sqrt((xshift3.^2)+(yshift3.^2))-a)+thetaa+phi3));

% adding the pressures together
psum=p1+p2+p3;




ppnorm=psum./max(psum);         % normalizing the pressure on the circle


% IMPORTANT: Weighting section
% weight function is based on heuristics,
% low cost near zero degrees, high cost near +-180,
% this should lead to results with good emission towards the front and
% low emissions towards the back
%weight=1-(cos(angles./2)).^4;
%weight=1-(cos((angles./2+pi))).^2;
weight=1-abs(cos((angles./2)));
weight(1:5)=100;
weightedp=abs(ppnorm).*weight;
%Lppolar=100+20.*log10(abs(weightedp)); % logarithmic representation

cost=sum(weightedp);